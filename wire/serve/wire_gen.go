// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package serve

import (
	"github.com/katsuokaisao/gin-play/api"
	"github.com/katsuokaisao/gin-play/api/handler"
	"github.com/katsuokaisao/gin-play/domain"
	"github.com/katsuokaisao/gin-play/infra/rdb"
	"github.com/katsuokaisao/gin-play/usecase"
)

// Injectors from wire.go:

func SetUpServe(cfg *domain.Env) (*Serve, error) {
	apiEnv := provideAPIEnv(cfg)
	dbEnv := provideDBEnv(cfg)
	rdbRDB, err := rdb.NewRDB(dbEnv)
	if err != nil {
		return nil, err
	}
	todoRepository := rdb.NewTodoRepository(rdbRDB)
	todoUseCase := usecase.NewTodoUseCase(todoRepository)
	todoHandler := handler.NewTodoHandler(todoUseCase)
	server := api.NewServer(apiEnv, todoHandler)
	serve := NewServe(server)
	return serve, nil
}

// wire.go:

type Serve struct {
	Server *api.Server
}

func NewServe(server *api.Server) *Serve {
	return &Serve{
		Server: server,
	}
}

func provideAPIEnv(cfg *domain.Env) *domain.APIEnv {
	return cfg.API
}

func provideDBEnv(cfg *domain.Env) *domain.DBEnv {
	return cfg.DB
}
